{"ast":null,"code":"var _jsxFileName = \"/Users/mischkiey/projects/drills/m6/c9/owl/src/Chat.js\";\nimport React from 'react';\n\nfunction Chat(props) {\n  console.log(new Date(props.timestamp * 1000));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.avatar,\n    alt: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, props.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, props.message));\n} // Chat-type based\n// Figure out timestamps later\n// Figure out how to do message\n\n\nfunction message(props) {\n  switch (props.type) {\n    case 'thumbs-up':\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, props.name, \" gave a thumbs up!\");\n      break;\n\n    case 'thumbs-down':\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, props.name, \" gave a thumbs down!\");\n\n    default:\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, props.message);\n  }\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/mischkiey/projects/drills/m6/c9/owl/src/Chat.js"],"names":["React","Chat","props","console","log","Date","timestamp","avatar","name","message","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAEjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,CAASH,KAAK,CAACI,SAAN,GAAkB,IAA3B,CAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEJ,KAAK,CAACK,MAAhB;AAAwB,IAAA,GAAG,EAAEL,KAAK,CAACM,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,KAAK,CAACM,IAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,KAAK,CAACO,OAAV,CAHJ,CADJ;AAQH,C,CAED;AACA;AACA;;;AAEA,SAASA,OAAT,CAAkBP,KAAlB,EAAyB;AACrB,UAAQA,KAAK,CAACQ,IAAd;AACI,SAAK,WAAL;AACI,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIR,KAAK,CAACM,IAAV,uBADJ;AAGA;;AACJ,SAAK,aAAL;AACI,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIN,KAAK,CAACM,IAAV,yBADJ;;AAIJ;AACI,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIN,KAAK,CAACO,OAAV,CADJ;AAZR;AAgBH;;AAED,eAAeR,IAAf","sourcesContent":["import React from 'react';\n\nfunction Chat(props) {\n    \n    console.log(new Date(props.timestamp * 1000))\n    return (\n        <div>\n            <img src={props.avatar} alt={props.name} />\n            <p>{props.name}</p>\n            <p>{props.message}</p>\n        </div>\n\n    )\n}\n\n// Chat-type based\n// Figure out timestamps later\n// Figure out how to do message\n\nfunction message (props) {\n    switch (props.type) {\n        case 'thumbs-up':\n            return (\n                <p>{props.name} gave a thumbs up!</p>\n            );\n            break;\n        case 'thumbs-down':\n            return (\n                <p>{props.name} gave a thumbs down!</p>\n            )\n\n        default:\n            return (\n                <p>{props.message}</p>\n            )\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}